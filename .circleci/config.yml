version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.4.0

executors:
  node:
    docker:
      - image: cimg/node:15.10.0

jobs:
  build_and_test:
    executor: node
    steps:
      - run:
          name: 'Show node and NPM versions'
          command: |
            node -v
            npm -v
      - checkout
      -  run: cd lawyer-vl-ui
      - restore_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - run:
          name: 'Building React App'
          command: |
            npm run build
      - run:
          name: 'Run tests'
          command: |
            echo TESTS NOT IMPLEMENTED YET


  deploy:
    parameters:
      deploy_env:
        type: string
    executor: node
    steps:
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export REACT_APP_CHAT_APP_ID="<< parameters.deploy_env >>"' >> $BASH_ENV
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: 'Install aws-amplify CLI'
          command: |
            sudo npm install -g @aws-amplify/cli
      - run:
          name: 'Show AWS CLI and Amplify Versions'
          command: |
            aws --version
            amplify --version

      - run: cd lawyer-vl-ui
      - run: npm ci
      - run: npm run build
      - run:
          name: 'Checkout Amplify << parameters.deploy_env >> Environment'
          command: |
            amplify env checkout << parameters.deploy_env >>
      - run:
          name: 'Deploy to << parameters.deploy_env >>'
          command: |
            amplify publish  -- yes

workflows:
  Deploy:
    jobs:
      - build_and_test
      - deploy:
          name: DeployDev
          deploy_env: dev
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - dev
      - request_production_deploy:
          type: approval
          filters:
            branches:
              only:
                - master
      - deploy:
          name: DeployProduction
          deploy_env: prod
          requires:
            - request_production_deploy
          filters:
            branches:
              only:
                - master
